<?xml version="1.0"?>
<robot name="ibot" xmlns:xacro="http://www.ros.org/wiki/xacro">

    <!-- PROPERTY LIST -->
    <xacro:property name="M_PI" value="3.1415926"/>
    <xacro:property name="base_mass"   value="1" /> 
    <xacro:property name="body_size" value=".3 .2 .1" />
    <xacro:property name="body_pos" value="0 0 0.05" />
    <xacro:property name="wheel_mass"   value="0.1" />
    <xacro:property name="wheel_radius" value="0.05" />
    <xacro:property name="wheel_length" value="0.05" />
    <xacro:property name="wheel1_pos" value="0.1 0.1 -0.05" />
    <xacro:property name="wheel2_pos" value="-0.1 0.1 -0.05" />
    <xacro:property name="wheel3_pos" value="0.1 -0.1 -0.05" />
    <xacro:property name="wheel4_pos" value="-0.1 -0.1 -0.05" />
    <xacro:property name="camera_size" value="0.04 0.08 0.04" />
    <xacro:property name="camera_offset_x" value="0.12" />
    <xacro:property name="camera_offset_y" value="0.0" />
    <xacro:property name="camera_offset_z" value="0.06" />


    <!-- Defining the colors used in this robot -->
    <material name="yellow">
        <color rgba="1 0.4 0 1"/>
    </material>
    <material name="black">
        <color rgba="0 0 0 0.95"/>
    </material>
    <material name="gray">
        <color rgba="0.75 0.75 0.75 1"/>
    </material>
    <material name="white">
        <color rgba="1 1 1 1"/>
    </material>




    <!-- Macro for inertia matrix -->
    <xacro:macro name="sphere_inertial_matrix" params="m r">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${2*m*r*r/5}" ixy="0" ixz="0"
                iyy="${2*m*r*r/5}" iyz="0" 
                izz="${2*m*r*r/5}" />
        </inertial>
    </xacro:macro>

    <xacro:macro name="cylinder_inertial_matrix" params="m r h">
        <inertial>
            <mass value="${m}" />
            <inertia ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
                iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
                izz="${m*r*r/2}" /> 
        </inertial>
    </xacro:macro>

    <xacro:macro name="Box_inertial_matrix" params="m l w h">
        <inertial>
               <mass value="${m}" />
               <inertia ixx="${m*(h*h + l*l)/12}" ixy = "0" ixz = "0"
                   iyy="${m*(w*w + l*l)/12}" iyz= "0"
                   izz="${m*(w*w + h*h)/12}" />
        </inertial>
    </xacro:macro>


    <!-- Macro for robot wheel -->
    <xacro:macro name="wheel" params="wheelname position">
	    <joint name="joint_base_${wheelname}" type="continuous">
	      <parent link="base_link"/>
	      <child link="${wheelname}"/>
	      <origin rpy="0 0 0" xyz="${position}"/>
              <axis xyz="0 1 0"/> 
              <!--limit effort="100" velocity="100" /-->
	    </joint>

	    <link name="${wheelname}">
	      <visual>
		   <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
		   <geometry>
		         <cylinder length="${wheel_length}" radius="${wheel_radius}"/>
		   </geometry>		
		   <material name="black" />
	      </visual>
              <collision>
                   <origin xyz="0 0 0" rpy="${M_PI/2} 0 0" />
                   <geometry>
                          <cylinder radius="${wheel_radius}" length = "${wheel_length}"/>
                   </geometry>
              </collision>
              <cylinder_inertial_matrix  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}" />
	    </link>
	    <gazebo reference="${wheelname}">
		<material>Gazebo/Black</material>              
	    </gazebo>
	 


            <!-- Transmission is important to link the joints and the controller-->
	    <transmission name="joint_base_${wheelname}_trans">
		    <type>transmission_interface/SimpleTransmission</type>
		    <joint name="joint_base_${wheelname}" >
		        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
		    </joint>
		    <actuator name="joint_base_${wheelname}_motor">
		        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
		        <mechanicalReduction>1</mechanicalReduction>
		    </actuator>
	    </transmission>
    </xacro:macro>


    <!-- Macro for robot RGB-D camera -->
    <xacro:macro name="usb_camera" params="prefix:=camera">
        <joint name="${prefix}_link_joint" type="fixed">
		<origin xyz="${camera_offset_x} ${camera_offset_y} ${camera_offset_z}" rpy="0 0 0" />
		<parent link="base_link"/>
		<child link="${prefix}_link"/>
        </joint>

        <link name="${prefix}_link">
            <visual>
                <origin xyz=" 0 0 0 " rpy="0 0 0" />
                <geometry>
                    <box size="${camera_size}" />
                </geometry>
                <material name="yellow"/>
            </visual>
        </link>
    </xacro:macro>

    <!-- Macro for robot base -->
    <xacro:macro name="ibot_base"> 
            <link name="base_footprint">
		    <visual>
		        <origin xyz="0 0 0" rpy="0 0 0" />
		        <geometry>
		            <box size="0.001 0.001 0.001" />
		        </geometry>
		    </visual>
            </link>   
            <gazebo reference="base_footprint">
                  <turnGravityOff>false</turnGravityOff>
            </gazebo>  

	    <joint name="base_footprint_joint" type="fixed">
		    <origin xyz="0 0 0.1" rpy="0 0 0" />        
		    <parent link="base_footprint"/>
		    <child link="base_link" />
	    </joint>

	    <link name="base_link">
		    <visual>
			       <geometry>
				 <box size="${body_size}"/>
			       </geometry>
			       <origin rpy="0 0 0" xyz="0 0 0"/>
			       <material name="white" />
		    </visual>
                    <collision>
				<origin xyz=" 0 0 0" rpy="0 0 0" />
				<geometry>
				    <box size="${body_size}" />
				</geometry>
                    </collision>   
                    <box_inertial_matrix  m="${base_mass}" l="0.3" w="0.2" h="0.1" />
	    </link>
            <gazebo reference="base_link">
                    <material>Gazebo/Blue</material>
            </gazebo>


	    <xacro:wheel wheelname="front_right" position="${wheel3_pos}"/>
	    <xacro:wheel wheelname="front_left" position="${wheel1_pos}"/>
	    <xacro:wheel wheelname="back_right" position="${wheel4_pos}"/>
	    <xacro:wheel wheelname="back_left" position="${wheel2_pos}"/>
	    <xacro:usb_camera prefix="camera"/>


        <!-- controller -->
	<gazebo>
	  <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_skid_steer_drive.so">
	    <updateRate>100.0</updateRate>
	    <robotNamespace></robotNamespace>
	    <leftFrontJoint>joint_base_front_left</leftFrontJoint>
	    <leftRearJoint>joint_base_back_left</leftRearJoint>
	    <rightFrontJoint>joint_base_front_right</rightFrontJoint>
	    <rightRearJoint>joint_base_back_right</rightRearJoint>
	    <wheelSeparation>0.2</wheelSeparation>
	    <wheelDiameter>${2*wheel_radius}</wheelDiameter>
	    <commandTopic>cmd_vel</commandTopic>
	    <odometryTopic>odom</odometryTopic>
	    <robotBaseFrame>base_footprint</robotBaseFrame>
	    <odometryFrame>odom</odometryFrame>
	    <torque>100</torque>
	    <topicName>cmd_vel</topicName>
	    <broadcastTF>1</broadcastTF>
	  </plugin>
	</gazebo>

	<!--gazebo>
	    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
	      <robotNamespace>/robot</robotNamespace>
	      <legacyModeNS>true</legacyModeNS>
	    </plugin>
	</gazebo-->

    </xacro:macro>
</robot>

